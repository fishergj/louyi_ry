<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.venue.order.mapper.OrderMapper">

	<insert id="insert" parameterType="Order">
		insert into t_order
		(
			name, telephone, w_no, adult, child, subscribe_num, subscribe_type, subscribe_time_id, venue, remark, input_time, status, create_time
		)
		values
		(
			#{name},
			#{telephone},
			#{w_no},
			#{adult},
			#{child},
			#{subscribe_num},
			#{subscribe_type},
			#{subscribe_time_id},
			#{venue},
			#{remark},
			#{input_time},
			#{status},
			#{create_time}
		)

	</insert>

	<insert id="insertComment" parameterType="Comment">
		insert into t_message
		(
			w_no, suggest, input_time, status, create_time
		)
		values
		(
			#{w_no},
			#{suggest},
			#{input_time},
			#{status},
			#{create_time}
		)
	</insert>
   
     <select id="selectOrderList" parameterType="Order" resultType="Order">
       select 
        	a.id
			,a.name
			,a.telephone
			,a.w_no
			,a.adult
			,a.child
			,a.subscribe_num
			,a.subscribe_type
			,a.subscribe_time_id
			,a.venue
			,a.remark
			,a.input_time
			,a.status
			,a.auditor
			,a.audit_time
			,a.alter_reason
			,a.create_time
			,a.update_time
        	,b.name as venueName      
		from t_order a 
		left join t_venue b
		on a.venue = b.id
        <where> 
	        <if test="name != null and name != ''">
				AND a.name like concat('%', #{name}, '%')
			</if>
			<if test="telephone != null and telephone != ''">
				AND a.telephone like concat('%', #{telephone}, '%')
			</if>
			<if test="subscribe_type != null and subscribe_type != 0">
				AND a.subscribe_type = #{subscribe_type}
			</if>
			<if test="status != null and status != 0">
				AND a.status = #{status}
			</if>
			<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
				AND date_format(a.input_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
			</if>
			<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
				AND date_format(a.input_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
			</if>
		</where>
		order by a.input_time asc
    </select>
    
     <select id="selectOrder" parameterType="int" resultType="Order">
     	select 
        	a.id
			,a.name
			,a.telephone
			,a.w_no
			,a.adult
			,a.child
			,a.subscribe_num
			,a.subscribe_type
			,a.subscribe_time_id
			,a.venue
			,a.remark
			,a.input_time
			,a.status
			,a.auditor
			,a.audit_time
			,a.alter_reason
			,a.create_time
			,a.update_time
		from t_order a 
		where a.id = #{id}
     </select>
     
      <select id="getOrderById" parameterType="Long" resultType="OrderResultBo">
       select 
        	a.id
			,a.name
			,a.telephone
			,a.w_no
			,a.adult
			,a.child
			,a.subscribe_num
			,a.subscribe_type
			,a.subscribe_time_id
			,a.venue
			,a.remark
			,a.input_time
			,a.status
			,a.auditor
			,a.audit_time
			,a.alter_reason
			,a.create_time
			,a.update_time
        	,b.name as venueName      
		from t_order a 
		left join t_venue b
		on a.venue = b.id
        where a.id = #{id}
    </select>
     
     <update id="updateStatus" parameterType="HashMap">
        update t_order 
        <set>
            status = #{status},
            auditor = #{auditor},
            audit_time = sysdate(),
            update_time = sysdate()
        </set>
         where Id = #{id}
    </update>

	<update id="cancelReserveById">
		update t_order
		set
			status='2',
			update_time = sysdate()
		where id=#{id}
	</update>
    
     <update id="updateOrderTime" parameterType="OrderResultBo">
        update t_order 
        <set>
            status = #{status},
            subscribe_time_id = #{subscribe_time_id},
            alter_reason = #{alter_reason},  
            input_time = #{input_time},     
            auditor = #{auditor},
            audit_time = sysdate(),
            update_time = sysdate()  
        </set>
         where Id = #{id}
    </update>
    
    <select id="selectOrderStasticsList" parameterType="Order" resultType="OrderStastics">
       select 
	       date_format(t.subscribeDate,'%Y-%m-%d') as orderDt,
	       t.weekDay ,
	       sum(t.subscribe_num) as orderSum,
	       sum(t.adult) as orderAdult,
	       sum(t.child) as orderChild
       from(
	       select 
	        	a.id
				,a.name
				,a.telephone
				,a.w_no
				,a.adult
				,a.child
				,a.subscribe_num
				,a.subscribe_type
				,a.subscribe_time_id
				,a.venue
				,a.remark
				,a.input_time
				,a.status
				,a.auditor
				,a.audit_time
				,a.alter_reason
				,a.create_time
				,a.update_time
	        	,b.name as venueName 
	        	,c.subscribeDate
				,c.weekDay    
			from t_order a 
			left join t_venue b
			on a.venue = b.id
			left join t_subscribe_detail c
			on a.subscribe_time_id = c.id
	        <where> 
	        		a.status !=2
		        <if test="name != null and name != ''">
					AND a.name like concat('%', #{name}, '%')
				</if>
				<if test="telephone != null and telephone != ''">
					AND a.telephone like concat('%', #{telephone}, '%')
				</if>
				<if test="subscribe_type != null and subscribe_type != 0">
					AND a.subscribe_type = #{subscribe_type}
				</if>
				<if test="status != null and status != 0">
					AND a.status = #{status}
				</if>
				<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
					AND date_format(a.input_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
				</if>
				<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
					AND date_format(a.input_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
				</if>
			</where>
			order by a.input_time asc
		) T
		group by t.subscribeDate,t.weekDay
    </select>
    
     <select id="selectHisOrderStastics" parameterType="Order" resultType="OrderStastics">
       select 
	       sum(t.subscribe_num) as orderSum,
	       sum(t.adult) as orderAdult,
	       sum(t.child) as orderChild,
	       count(t.id) as orderCount
       from(
	       select 
	        	a.id
				,a.name
				,a.telephone
				,a.w_no
				,a.adult
				,a.child
				,a.subscribe_num
				,a.subscribe_type
				,a.subscribe_time_id
				,a.venue
				,a.remark
				,a.input_time
				,a.status
				,a.auditor
				,a.audit_time
				,a.alter_reason
				,a.create_time
				,a.update_time
	        	,b.name as venueName 
	        	,c.subscribeDate
				,c.weekDay   
			from t_order a 
			left join t_venue b
			on a.venue = b.id
			left join t_subscribe_detail c
			on a.subscribe_time_id = c.id
	        <where> 
	             a.status !=2
		        <if test="name != null and name != ''">
					AND a.name like concat('%', #{name}, '%')
				</if>
				<if test="telephone != null and telephone != ''">
					AND a.telephone like concat('%', #{telephone}, '%')
				</if>
				<if test="subscribe_type != null and subscribe_type != 0">
					AND a.subscribe_type = #{subscribe_type}
				</if>
				<if test="status != null and status != 0">
					AND a.status = #{status}
				</if>
				<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
					AND date_format(a.input_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
				</if>
				<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
					AND date_format(a.input_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
				</if>
			</where>
			order by a.input_time asc
		) T
    </select>
    
    <select id="selectHisOrderStasticsByWeek" parameterType="Order" resultType="OrderStastics">
       select 
	       sum(t.subscribe_num) as orderSum,
	       sum(t.adult) as orderAdult,
	       sum(t.child) as orderChild,
	       count(t.id) as orderCount,
	       t.weekDay
       from(
	       select 
	        	a.id
				,a.name
				,a.telephone
				,a.w_no
				,a.adult
				,a.child
				,a.subscribe_num
				,a.subscribe_type
				,a.subscribe_time_id
				,a.venue
				,a.remark
				,a.input_time
				,a.status
				,a.auditor
				,a.audit_time
				,a.alter_reason
				,a.create_time
				,a.update_time
	        	,b.name as venueName 
	        	,c.subscribeDate
				,c.weekDay   
			from t_order a 
			left join t_venue b
			on a.venue = b.id
			left join t_subscribe_detail c
			on a.subscribe_time_id = c.id
	        <where> 
	             a.status !=2
		        <if test="name != null and name != ''">
					AND a.name like concat('%', #{name}, '%')
				</if>
				<if test="telephone != null and telephone != ''">
					AND a.telephone like concat('%', #{telephone}, '%')
				</if>
				<if test="subscribe_type != null and subscribe_type != 0">
					AND a.subscribe_type = #{subscribe_type}
				</if>
				<if test="status != null and status != 0">
					AND a.status = #{status}
				</if>
				<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
					AND date_format(a.input_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
				</if>
				<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
					AND date_format(a.input_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
				</if>
			</where>
			order by a.input_time asc
		) T
		group by t.weekDay
		order by t.weekDay
    </select>
    
    <select id="selectNextOrderStasticsByWeek" parameterType="HashMap" resultType="OrderStastics">
       select 
	       sum(t.subscribe_num) as orderSum,
	       sum(t.adult) as orderAdult,
	       sum(t.child) as orderChild,
	       count(t.id) as orderCount,
	       t.weekDay
       from(
	       select 
	        	a.id
				,a.name
				,a.telephone
				,a.w_no
				,a.adult
				,a.child
				,a.subscribe_num
				,a.subscribe_type
				,a.subscribe_time_id
				,a.venue
				,a.remark
				,a.input_time
				,a.status
				,a.auditor
				,a.audit_time
				,a.alter_reason
				,a.create_time
				,a.update_time
	        	,b.name as venueName 
	        	,c.subscribeDate
				,c.weekDay   
			from t_order a 
			left join t_venue b
			on a.venue = b.id
			left join t_subscribe_detail c
			on a.subscribe_time_id = c.id
			where a.status !=2
				AND date_format(a.input_time,'%y%m%d') &gt;= date_format(#{beginTime},'%y%m%d') 
				AND date_format(a.input_time,'%y%m%d') &lt;= date_format(#{endTime},'%y%m%d')
			order by a.input_time asc
		) T
		group by t.weekDay
		order by t.weekDay
    </select>
    
    <select id="selectWaiteAuditCount"  resultType="int">
    	select count(1) from t_order where status = 1 
    </select>
    
    <select id="selectSubscribePerson" parameterType="Integer" resultType="int">
	  	SELECT
			ifnull(sum(subscribe_num),0) totalPerson
		FROM
			t_order
		WHERE subscribe_time_id = #{id}
   </select>

	<select id="getNormalOrderByWno" parameterType="String" resultType="Order">
		select * from t_order where w_no=#{w_no} and status in (1, 4, 5) and input_time>sysdate() order by input_time desc
	</select>

	<select id="getValidCountByTimeId" resultType="int">
		select count(*) from t_order where subscribe_time_id=#{subscribe_time_id}
	</select>

	<select id="getNormalOrderVoByWno" parameterType="String" resultType="OrderVo">
		select
		 t1.id, t1.name, t1.telephone, t1.w_no, t1.adult, t1.child, t1.subscribe_num, t1.subscribe_type,
		 t1.subscribe_time_id, t1.venue, t2.name as venue_text, t1.remark, t1.input_time, t1.create_time,
		 t1.status,
		 case t1.status
		 	when '1' then '待审核'
		 	when '2' then '用户撤销'
		 	when '3' then '驳回'
		 	when '4' then '协商调整'
		 	when '5' then '审核通过'
		 	else '已过期' end as status_text
		 from
		  t_order t1, t_venue t2
		   where w_no=#{w_no} and t1.venue=t2.id
		order by t1.input_time desc
	</select>
</mapper>